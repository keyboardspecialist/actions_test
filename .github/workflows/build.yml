name: Test-CI

on:
  release:
    type: [created]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} #gives is a valid branch name from push or PR

jobs:

  BuildItLinux:
    runs-on: ubuntu-latest
    outputs:
          artifact_name: ${{steps.artifact.outputs.artifact_name}}
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      
      - name: CPU Cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Build It
        run: |
          clang++ main.cc -o hello

      - name: Artifact Name
        id: artifact
        run: |
          echo "artifact_name=${{runner.os}}-build" >> "$GITHUB_OUTPUT"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.artifact_name }}
          path: ./hello
          retention-days: 1

  BuildItWin:
    runs-on: windows-latest
    outputs:
      artifact_name: ${{steps.artifact.outputs.artifact_name}}
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      
      - name: CPU Cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Build It
        run: |
          cl main.cc /Fe:hello.exe

      - name: Artifact Name
        id: artifact
        run: |
          echo "artifact_name=${{runner.os}}-build" >> "$env:GITHUB_OUTPUT"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.artifact_name }}
          path: ./hello.exe
          retention-days: 1

  ReleaseIt:
    runs-on: ubuntu-latest
    needs: [BuildItLinux, BuildItWin]
    steps:

      - name: Download Builds
        uses: actions/download-artifact@v3

      - name: Builds Downloaded
        run: |
          ls -l

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Upload Linux Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./
          asset_name: ${{ needs.BuildItLinux.outputs.artifact_name }}
          asset_content_type: application/gzip

      - name: Upload Win Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./
          asset_name: ${{ needs.BuildItWin.artifact.outputs.artifact_name }}
          asset_content_type: application/gzip
